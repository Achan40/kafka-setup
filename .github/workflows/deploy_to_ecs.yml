name: Deploy task definition to ECS

on:
  push:
    branches:
      - dev
permissions:
  id-token: write   # Required for OIDC
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: kafka-setup

    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-region: us-east-2
          role-to-assume: ${{ secrets.CI_CD_ROLE_ARN }}
        
      - name: Register Task Definitions and Create/Update Services
        env:
            CLUSTER_NAME: ${{ secrets.ECS_CLUSTER_NAME_DEV }}
        run: |
          set -euo pipefail
          shopt -s nullglob

          for task_file in ecs_task_definitions/*.json; do
            echo "Registering task definition: $task_file"

            TASK_DEF_ARN=$(aws ecs register-task-definition \
              --cli-input-json file://"$task_file" \
              --query 'taskDefinition.taskDefinitionArn' \
              --output text)

            echo "Registered: $TASK_DEF_ARN"

            FAMILY=$(jq -r '.family' "$task_file")
            SERVICE_NAME=$FAMILY

            echo "Checking if service $SERVICE_NAME exists on cluster $CLUSTER_NAME..."
            if aws ecs describe-services --cluster "$CLUSTER_NAME" --services "$SERVICE_NAME" \
                 --query 'failures[?reason==`MISSING`]' --output text | grep -q "MISSING"; then
              echo "Service not found. Creating ECS service: $SERVICE_NAME"

              aws ecs create-service \
                --cluster "$CLUSTER_NAME" \
                --service-name "$SERVICE_NAME" \
                --task-definition "$TASK_DEF_ARN" \
                --desired-count 1 \
                --launch-type EC2 \
                --deployment-controller type=ECS
            else
              echo "Updating ECS service: $SERVICE_NAME"
              aws ecs update-service \
                --cluster "$CLUSTER_NAME" \
                --service "$SERVICE_NAME" \
                --task-definition "$TASK_DEF_ARN"
            fi
          done